// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.3
//   protoc               v3.20.3
// source: inventory.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "inventory";

export interface CheckStockRequest {
  skuCodes: string[];
}

export interface StockItem {
  skuCode: string;
  stock: number;
}

export interface CheckStockResponse {
  items: StockItem[];
}

export const INVENTORY_PACKAGE_NAME = "inventory";

export interface InventoryServiceClient {
  checkStock(request: CheckStockRequest): Observable<CheckStockResponse>;
}

export interface InventoryServiceController {
  checkStock(
    request: CheckStockRequest,
  ): Promise<CheckStockResponse> | Observable<CheckStockResponse> | CheckStockResponse;
}

export function InventoryServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["checkStock"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("InventoryService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("InventoryService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const INVENTORY_SERVICE_NAME = "InventoryService";
